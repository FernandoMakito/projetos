/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package backup.dats;

import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fernando
 */
public class FrmDestinos extends javax.swing.JFrame {

    /**
     * Creates new form FrmExtensoes
     */
    public FrmDestinos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDestinos = new javax.swing.JTable();
        btSalvar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btSelecionar = new javax.swing.JButton();
        btDefinirNome = new javax.swing.JButton();
        lblNome = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Definir destinos do backup");
        setLocationByPlatform(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tabelaDestinos.setAutoCreateRowSorter(true);
        tabelaDestinos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Caminho", "Ativo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaDestinos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        tabelaDestinos.setMaximumSize(new java.awt.Dimension(80, 0));
        tabelaDestinos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelaDestinos);
        if (tabelaDestinos.getColumnModel().getColumnCount() > 0) {
            tabelaDestinos.getColumnModel().getColumn(1).setMaxWidth(50);
        }

        btSalvar.setBackground(new java.awt.Color(1, 109, 187));
        btSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btSalvar.setText("Salvar destinos");
        btSalvar.setActionCommand("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Pasta de destino"));

        btSelecionar.setBackground(new java.awt.Color(1, 109, 187));
        btSelecionar.setForeground(new java.awt.Color(255, 255, 255));
        btSelecionar.setText("Adicionar Pasta");
        btSelecionar.setToolTipText("Adicionar um local onde o backup ser√° feito");
        btSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelecionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btSelecionar, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        btDefinirNome.setText("Alterar nome");
        btDefinirNome.setToolTipText("Definir qual vai ser o nome do arquivo salvo");
        btDefinirNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDefinirNomeActionPerformed(evt);
            }
        });

        lblNome.setText(" ");
        lblNome.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btDefinirNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btSalvar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(btDefinirNome))
                .addGap(0, 0, 0)
                .addComponent(lblNome))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
            Configuracoes cfg = new Configuracoes();
            String destinos = cfg.getPropriedade("pasta_destino");
            String nomeArquivo = cfg.getPropriedade("nome_arquivo");
            if (!destinos.equals("")) {
                if (!destinos.contains("[") && !destinos.equals("")) {
                    destinos = "[" + new File(destinos).getParent() + "],";
                }
                DefaultTableModel model = (DefaultTableModel) tabelaDestinos.getModel();
                String[] destino = destinos.split(",");
                for (int i = 0; i < destino.length; i++) {
                    model.addRow(new Object[]{destino[i].replace("[", "").replace("]", ""), true});
                }
            }
            lblNome.setText("<html><b>" + nomeArquivo + dataBackup() + ".zip<b/></html>");
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(FrmDestinos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FrmDestinos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        try {
            // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel) tabelaDestinos.getModel();
            int qtdFiles = model.getRowCount();
            Configuracoes cfg = new Configuracoes();
            String destinos = "";
            for (int i = 0; i < qtdFiles; i++) {
                boolean selec = (boolean) model.getValueAt(i, 1);
                if (selec) {
                    destinos = (String) "[" + model.getValueAt(i, 0) + "]," + destinos;
                }
            }
            if(!destinos.equals("")){
                cfg.setPropriedade("pasta_destino", destinos);
                setVisible(false);
            }else{
                JOptionPane.showMessageDialog(this, "Informe ao menos um destino do backup","Nenhum destino", JOptionPane.ERROR_MESSAGE);
            }
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(FrmExtensoes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FrmExtensoes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelecionarActionPerformed
        String caminho = selecionaPasta();
        if (confereCaminho(caminho)) {
            DefaultTableModel model = (DefaultTableModel) tabelaDestinos.getModel();
            model.addRow(new Object[]{caminho, true});
        }
    }//GEN-LAST:event_btSelecionarActionPerformed

    private void btDefinirNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDefinirNomeActionPerformed
        FrmNomeArquivo frm = new FrmNomeArquivo();
        frm.setVisible(true);
        frm.addComponentListener(new ComponentAdapter() {
            public void componentHidden(ComponentEvent e) {
                try {
                    Configuracoes cfg = new Configuracoes();
                    String nomeArquivo = cfg.getPropriedade("nome_arquivo");
                    lblNome.setText("<html><b>" + nomeArquivo + dataBackup() + ".zip<b/></html>");
                } catch (UnsupportedEncodingException ex) {
                    Logger.getLogger(FrmDestinos.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(FrmDestinos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }//GEN-LAST:event_btDefinirNomeActionPerformed

    private boolean confereCaminho(String caminho) {
        if (caminho.equals("")) {
            return false;
        }
        DefaultTableModel model = (DefaultTableModel) tabelaDestinos.getModel();
        boolean tudoOk = true;
        String linha;
        for (int i = 0; i < model.getRowCount(); i++) {
            linha = (String) model.getValueAt(i, 0);
            if (linha.equals(caminho)) {
                tudoOk = false;
                JOptionPane.showMessageDialog(null, "<html>O destino <b>" + caminho + "</b> j√° existe na listagem abaixo<html>", "Problemas ao adicionar destino", JOptionPane.INFORMATION_MESSAGE);
                break;
            }
        }
        return tudoOk;
    }

    private String dataBackup() {
        DateFormat sdf = new SimpleDateFormat("dd-MM-yy");
        Date date = new Date();
        String data = sdf.format(date);
        return "_" + data;
    }

    private String selecionaPasta() {
        JFileChooser j = new JFileChooser(new File("."));
        j.setCurrentDirectory(j.getFileSystemView().getParentDirectory(new File("C:\\")));
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        j.setDialogTitle("Selecione uma pasta de destino");
        j.setApproveButtonText("Selecionar Pasta");
        j.setAcceptAllFileFilterUsed(false);
        Integer opt = j.showOpenDialog(this);
        if (opt == 0) {
            return j.getSelectedFile().getAbsolutePath();
        } else {
            return "";
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmDestinos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmDestinos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmDestinos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmDestinos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmDestinos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDefinirNome;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btSelecionar;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNome;
    private javax.swing.JTable tabelaDestinos;
    // End of variables declaration//GEN-END:variables
}
